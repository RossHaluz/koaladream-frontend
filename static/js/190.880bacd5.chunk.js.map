{"version":3,"file":"static/js/190.880bacd5.chunk.js","mappings":"uQAQMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GAAW,sBAAsBE,SAAS,6BA2GlD,EAxG0B,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChBF,EAAqCE,EAArCF,KAAMG,EAA+BD,EAA/BC,YAAkBC,EAAaF,EAAlBG,IACrBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,CAClBV,KAAMA,EACNG,YAAaA,GASnB,OAAQ,iBAAKQ,UAAU,oCAAf,WACR,eAAIA,UAAU,wBAAd,0BACCT,IACC,SAAC,KAAD,CACEQ,cAAeA,EACfE,SAXiB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UACzBR,GAASS,EAAAA,EAAAA,IAAa,CAAEF,MAAAA,EAAOT,SAAAA,KAC/BI,EAAS,iBACTM,GACD,EAQDhB,iBAAkBA,EAHpB,SAKG,YAAiB,IAAdkB,EAAa,EAAbA,OACF,OACE,UAAC,KAAD,CAAML,UAAU,2BAAhB,WACE,mBAAOA,UAAU,0BAAjB,WACE,iBAAKA,UAAU,+BAAf,WACE,yCACa,iBAAMA,UAAU,eAAhB,mBAEb,SAAC,KAAD,CACEX,KAAK,OACLiB,KAAK,OACLC,YAAY,cACZP,UAAU,uLAGd,SAAC,KAAD,CACEX,KAAK,OACLmB,UAAU,IACVR,UAAU,4FAGd,iBAAKA,UAAU,2BAAf,WACE,SAAC,KAAD,CACEX,KAAK,cACLoB,OAAQ,SAAAC,GAAY,OAClB,iCACE,iBAAKV,UAAU,+BAAf,WACE,eAAIA,UAAU,wBAAd,kCAGA,mBACEM,KAAK,SACLK,QAAS,kBAAMD,EAAaE,KAAK,CAAEvB,KAAM,IAAhC,EACTW,UAAU,iEAHZ,UAKE,SAAC,MAAD,CAAUA,UAAU,gEAGxB,gBAAKA,UAAU,2BAAf,SACGK,EAAOb,YAAYqB,KAAI,SAACtB,EAAQuB,GAAT,OACtB,iBAEEd,UAAU,+BAFZ,WAIE,mBAAOA,UAAU,uDAAjB,0BAEE,SAAC,KAAD,CACEO,YAAY,eACZlB,KAAI,sBAAiByB,EAAjB,UACJd,UAAU,uLAId,mBACEM,KAAK,SACLK,QAAS,kBAAMD,EAAaK,OAAOD,EAA1B,EAFX,UAIE,SAAC,MAAD,CAAiBd,UAAU,uCAhBxBc,EAFe,QAfV,KAyCtB,mBACER,KAAK,SACLN,UAAU,+FAFZ,gCASP,MAIN,E,oBC7FD,EAb8B,WAC9B,IAAOP,GAAYuB,EAAAA,EAAAA,MAAZvB,SACDE,GAAWC,EAAAA,EAAAA,MACXL,GAAS0B,EAAAA,EAAAA,IAAYC,EAAAA,GAOzB,OALFC,EAAAA,EAAAA,YAAU,WACVxB,GAASyB,EAAAA,EAAAA,IAAU3B,GAClB,GAAE,CAACE,EAAUF,KAGL,8BAAGF,IAAU,SAAC,EAAD,CAAmBA,OAAQA,KAChD,C,8ECnBM,IAAM8B,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,OAAtB,EAErBN,EAAe,SAAAI,GAAK,OAAIA,EAAMC,YAAYhC,MAAtB,C","sources":["components/AdminFilterUpdate.jsx","pages/AdminFilterUpdatePage.jsx","redux/filtersAdmin/selectors.js"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport { BsPlusLg } from 'react-icons/bs';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { updateFilter } from 'redux/filtersAdmin/operetions';\n\nconst validationSchema = Yup.object({\n  name: Yup.string('Type a name option').required('Name option is required'),\n});\n\nconst AdminFilterUpdate = ({filter}) => {\n    const { name, filterValue, _id: filterId } = filter;\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const initialValues = {\n        name: name,\n        filterValue: filterValue,\n      };\n    \n      const onSubmit = (value, { resetForm }) => {\n        dispatch(updateFilter({ value, filterId }));\n        navigate('/admin/filter');\n        resetForm();\n      };\n  \n  return  <div className=\"p-[15px] flex flex-col gap-[15px]\">\n  <h1 className=\"text-[24px] font-bold\">Eddit filter</h1>\n  {filter && (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ values }) => {\n        return (\n          <Form className=\"flex flex-col gap-[30px]\">\n            <label className=\"text-[18px] font-medium\">\n              <div className=\"flex items-center gap-[15px]\">\n                <h3>\n                  Name filter<span className=\"text-red-500\">*</span>\n                </h3>\n                <Field\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Nema option\"\n                  className=\"bg-transparent border border-solid border-[#7FAA84] w-[380px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                />\n              </div>\n              <ErrorMessage\n                name=\"name\"\n                component=\"p\"\n                className=\"text-[#EF787A] text-[16px] font-semibold tracking-[0.32px] leading-[24px] mt-[15px]\"\n              />\n            </label>\n            <div className=\"flex flex-col gap-[20px]\">\n              <FieldArray\n                name=\"filterValue\"\n                render={arrayHelpers => (\n                  <>\n                    <div className=\"flex items-center gap-[15px]\">\n                      <h2 className=\"text-[24px] font-bold\">\n                        Eddit filter values\n                      </h2>\n                      <button\n                        type=\"button\"\n                        onClick={() => arrayHelpers.push({ name: '' })}\n                        className=\"p-[15px] bg-[#343a40] rounded-[5px] w-[34px] h-[34px] relative\"\n                      >\n                        <BsPlusLg className=\"text-[#fff] text-[24px] absolute top-[5px] left-[5px]\" />\n                      </button>\n                    </div>\n                    <div className=\"flex flex-col gap-[15px]\">\n                      {values.filterValue.map((filter, index) => (\n                        <div\n                          key={index}\n                          className=\"flex items-center gap-[15px]\"\n                        >\n                          <label className=\"flex items-center gap-[15px] text-[18px] font-medium\">\n                            Filter value\n                            <Field\n                              placeholder=\"Filter value\"\n                              name={`filterValue[${index}].name`}\n                              className=\"bg-transparent border border-solid border-[#7FAA84] w-[380px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                            />\n                          </label>\n\n                          <button\n                            type=\"button\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            <RiDeleteBinLine className=\"w-[24px] h-[24px] text-red-500\" />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </>\n                )}\n              />\n              <button\n                type=\"submit\"\n                className=\"py-[15px] px-[25px] bg-[#7FAA84] rounded-[5px] text-[#fff] text-[16px] font-medium w-[220px]\"\n              >\n                Update filter\n              </button>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  )}\n</div>\n}\n\nexport default AdminFilterUpdate\n","import AdminFilterUpdate from \"components/AdminFilterUpdate\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getFilter } from \"redux/filtersAdmin/operetions\";\nimport { selectFilter } from \"redux/filtersAdmin/selectors\";\n\n\nconst AdminFilterUpdatePage = () => {\nconst {filterId} = useParams();\nconst dispatch = useDispatch();\nconst filter = useSelector(selectFilter);\n\nuseEffect(() => {\ndispatch(getFilter(filterId));\n}, [dispatch, filterId])\n\n\n  return <>{filter && <AdminFilterUpdate filter={filter}/>}</>\n}\n\nexport default AdminFilterUpdatePage\n","export const selectFilters = state => state.filterAdmin.filters;\n\nexport const selectFilter = state => state.filterAdmin.filter;"],"names":["validationSchema","Yup","name","required","filter","filterValue","filterId","_id","dispatch","useDispatch","navigate","useNavigate","initialValues","className","onSubmit","value","resetForm","updateFilter","values","type","placeholder","component","render","arrayHelpers","onClick","push","map","index","remove","useParams","useSelector","selectFilter","useEffect","getFilter","selectFilters","state","filterAdmin","filters"],"sourceRoot":""}