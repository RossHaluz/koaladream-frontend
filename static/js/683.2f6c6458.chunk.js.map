{"version":3,"file":"static/js/683.2f6c6458.chunk.js","mappings":"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","sources":["../node_modules/react-rating-stars-component/dist/hooks/useConfig.js","../node_modules/react-rating-stars-component/dist/react-stars.js","../node_modules/react-rating-stars-component/dist/star.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = useConfig;\n\nvar _react = require('react');\n\nfunction useConfig(config) {\n    var _useState = (0, _react.useState)(config.count),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(config.size),\n        _useState4 = _slicedToArray(_useState3, 2),\n        size = _useState4[0],\n        setSize = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(config.char),\n        _useState6 = _slicedToArray(_useState5, 2),\n        char = _useState6[0],\n        setChar = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(config.color),\n        _useState8 = _slicedToArray(_useState7, 2),\n        color = _useState8[0],\n        setColor = _useState8[1];\n\n    var _useState9 = (0, _react.useState)(config.activeColor),\n        _useState10 = _slicedToArray(_useState9, 2),\n        activeColor = _useState10[0],\n        setActiveColor = _useState10[1];\n\n    var _useState11 = (0, _react.useState)(config.isHalf),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isHalf = _useState12[0],\n        setIsHalf = _useState12[1];\n\n    var _useState13 = (0, _react.useState)(config.edit),\n        _useState14 = _slicedToArray(_useState13, 2),\n        edit = _useState14[0],\n        setEdit = _useState14[1];\n\n    var _useState15 = (0, _react.useState)(config.emptyIcon),\n        _useState16 = _slicedToArray(_useState15, 2),\n        emptyIcon = _useState16[0],\n        setEmptyIcon = _useState16[1];\n\n    var _useState17 = (0, _react.useState)(config.halfIcon),\n        _useState18 = _slicedToArray(_useState17, 2),\n        halfIcon = _useState18[0],\n        setHalfIcon = _useState18[1];\n\n    var _useState19 = (0, _react.useState)(config.filledIcon),\n        _useState20 = _slicedToArray(_useState19, 2),\n        filledIcon = _useState20[0],\n        setFilledIcon = _useState20[1];\n\n    var _useState21 = (0, _react.useState)(config.a11y),\n        _useState22 = _slicedToArray(_useState21, 2),\n        a11y = _useState22[0],\n        setA11y = _useState22[1];\n\n    var configObj = {\n        count: count,\n        size: size,\n        char: char,\n        color: color,\n        activeColor: activeColor,\n        isHalf: isHalf,\n        edit: edit,\n        emptyIcon: emptyIcon,\n        halfIcon: halfIcon,\n        filledIcon: filledIcon,\n        a11y: a11y\n    };\n\n    function setConfig(config) {\n        setCount(config.count);\n        setSize(config.size);\n        setChar(config.char);\n        setColor(config.color);\n        setActiveColor(config.activeColor);\n        setIsHalf(config.isHalf);\n        setEdit(config.edit);\n        setEmptyIcon(config.emptyIcon);\n        setHalfIcon(config.halfIcon);\n        setFilledIcon(config.filledIcon);\n        setA11y(config.a11y);\n    }\n\n    return [configObj, setConfig];\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _useConfig3 = require('./hooks/useConfig');\n\nvar _useConfig4 = _interopRequireDefault(_useConfig3);\n\nvar _star = require('./star');\n\nvar _star2 = _interopRequireDefault(_star);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar parentStyles = {\n    overflow: \"hidden\",\n    position: \"relative\"\n};\n\nfunction getHalfStarStyles(color, uniqueness) {\n    return '\\n    .react-stars-' + uniqueness + ':before {\\n      position: absolute;\\n      overflow: hidden;\\n      display: block;\\n      z-index: 1;\\n      top: 0; left: 0;\\n      width: 50%;\\n      content: attr(data-forhalf);\\n      color: ' + color + ';\\n  }';\n}\n\nfunction getHalfStarStyleForIcons(color) {\n    return '\\n          span.react-stars-half > * {\\n          color: ' + color + ';\\n      }';\n};\n\nfunction ReactStars(props) {\n    var _useState = (0, _react.useState)(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        uniqueness = _useState2[0],\n        setUniqueness = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentValue = _useState4[0],\n        setCurrentValue = _useState4[1];\n\n    var _useState5 = (0, _react.useState)([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stars = _useState6[0],\n        setStars = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isUsingIcons = _useState8[0],\n        setIsUsingIcons = _useState8[1];\n\n    var _useConfig = (0, _useConfig4.default)(props),\n        _useConfig2 = _slicedToArray(_useConfig, 2),\n        config = _useConfig2[0],\n        setConfig = _useConfig2[1];\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        halfStarAt = _useState10[0],\n        setHalfStarAt = _useState10[1];\n\n    var _useState11 = (0, _react.useState)(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        halfStarHidden = _useState12[0],\n        setHalfStarHidden = _useState12[1];\n\n    var _useState13 = (0, _react.useState)(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        classNames = _useState14[0],\n        setClassNames = _useState14[1];\n\n    function iconsUsed(config) {\n        return !config.isHalf && config.emptyIcon && config.filledIcon || config.isHalf && config.emptyIcon && config.halfIcon && config.filledIcon;\n    }\n\n    function createUniqueness() {\n        setUniqueness((Math.random() + \"\").replace(\".\", \"\"));\n    }\n\n    (0, _react.useEffect)(function () {\n        addClassNames();\n        validateInitialValue(props.value, props.count);\n        setStars(getStars(props.value));\n        setConfig(props);\n        createUniqueness();\n        setIsUsingIcons(iconsUsed(props));\n        setHalfStarAt(Math.floor(props.value));\n        setHalfStarHidden(props.isHalf && props.value % 1 < 0.5);\n    }, []);\n\n    function validateInitialValue(value, count) {\n        if (value < 0 || value > count) {\n            setCurrentValue(0);\n        } else {\n            setCurrentValue(value);\n        }\n    }\n\n    function addClassNames() {\n        var reactStarsClass = 'react-stars';\n        setClassNames(props.classNames + (' ' + reactStarsClass));\n    }\n\n    function isDecimal(value) {\n        return value % 1 === 0;\n    }\n\n    function getRate() {\n        return config.isHalf ? Math.floor(currentValue) : Math.round(currentValue);\n    }\n\n    function getStars(activeCount) {\n        if (typeof activeCount === 'undefined') {\n            activeCount = getRate();\n        }\n\n        var stars = [];\n        for (var i = 0; i < config.count; i++) {\n            stars.push({\n                active: i <= activeCount - 1\n            });\n        }\n        return stars;\n    }\n\n    function mouseOver(event) {\n        if (!config.edit) return;\n\n        var index = Number(event.currentTarget.getAttribute('data-index'));\n\n        if (config.isHalf) {\n            var isAtHalf = moreThanHalf(event);\n            setHalfStarHidden(isAtHalf);\n            if (isAtHalf) index += 1;\n            setHalfStarAt(index);\n        } else {\n            index += 1;\n        }\n\n        updateStars(index);\n    }\n\n    function updateStars(index) {\n        var currentActive = stars.filter(function (x) {\n            return x.active;\n        });\n        if (index !== currentActive.length) {\n            setStars(getStars(index));\n        }\n    }\n\n    function moreThanHalf(event) {\n        var target = event.target;\n\n        var boundingClientRect = target.getBoundingClientRect();\n        var mouseAt = event.clientX - boundingClientRect.left;\n        mouseAt = Math.round(Math.abs(mouseAt));\n\n        return mouseAt > boundingClientRect.width / 2;\n    }\n\n    function mouseLeave() {\n        if (!config.edit) return;\n\n        updateHalfStarValues(currentValue);\n        setStars(getStars());\n    }\n\n    function updateHalfStarValues(value) {\n        if (config.isHalf) {\n            setHalfStarHidden(isDecimal(value));\n            setHalfStarAt(Math.floor(value));\n        }\n    }\n\n    function onClick(event) {\n        if (!config.edit) return;\n\n        var index = Number(event.currentTarget.getAttribute('data-index'));\n        var value = void 0;\n        if (config.isHalf) {\n            var isAtHalf = moreThanHalf(event);\n            setHalfStarHidden(isAtHalf);\n            if (isAtHalf) index += 1;\n            value = isAtHalf ? index : index + 0.5;\n            setHalfStarAt(index);\n        } else {\n            value = index = index + 1;\n        }\n\n        currentValueUpdated(value);\n    }\n\n    function renderHalfStarStyleElement() {\n        return _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n                __html: isUsingIcons ? getHalfStarStyleForIcons(config.activeColor) : getHalfStarStyles(config.activeColor, uniqueness)\n            } });\n    }\n\n    function currentValueUpdated(value) {\n        if (value !== currentValue) {\n            setStars(getStars(value));\n            setCurrentValue(value);\n            props.onChange(value);\n        }\n    }\n\n    function handleKeyDown(event) {\n        if (!config.a11y && !config.edit) return;\n\n        var key = event.key;\n\n        var value = currentValue;\n\n        var keyNumber = Number(key); // e.g. \"1\" => 1, \"ArrowUp\" => NaN\n        if (keyNumber) {\n            if (Number.isInteger(keyNumber) && keyNumber > 0 && keyNumber <= config.count) {\n                value = keyNumber;\n            }\n        } else {\n            if ((key === \"ArrowUp\" || key === \"ArrowRight\") && value < config.count) {\n                event.preventDefault();\n\n                value += config.isHalf ? 0.5 : 1;\n            } else if ((key === \"ArrowDown\" || key === \"ArrowLeft\") && value > 0.5) {\n                event.preventDefault();\n                value -= config.isHalf ? 0.5 : 1;\n            }\n        }\n\n        updateHalfStarValues(value);\n\n        currentValueUpdated(value);\n    }\n\n    function renderStars() {\n        return stars.map(function (star, i) {\n            return _react2.default.createElement(_star2.default, {\n                key: i,\n                index: i,\n                active: star.active,\n                config: config,\n                onMouseOver: mouseOver,\n                onMouseLeave: mouseLeave,\n                onClick: onClick,\n                halfStarHidden: halfStarHidden,\n                halfStarAt: halfStarAt,\n                isUsingIcons: isUsingIcons,\n                uniqueness: uniqueness\n            });\n        });\n    }\n\n    return _react2.default.createElement(\n        'div',\n        { className: 'react-stars-wrapper-' + uniqueness,\n            style: { display: 'flex' } },\n        _react2.default.createElement(\n            'div',\n            { tabIndex: config.a11y && config.edit ? 0 : null,\n                'aria-label': 'add rating by typing an integer from 0 to 5 or pressing arrow keys',\n                onKeyDown: handleKeyDown,\n                className: classNames,\n                style: parentStyles },\n            config.isHalf && renderHalfStarStyleElement(),\n            renderStars(),\n            _react2.default.createElement(\n                'p',\n                { style: { position: 'absolute', left: '-200rem' }, role: 'status' },\n                currentValue\n            )\n        )\n    );\n}\n\nReactStars.propTypes = {\n    classNames: _propTypes2.default.string,\n    edit: _propTypes2.default.bool,\n    half: _propTypes2.default.bool,\n    value: _propTypes2.default.number,\n    count: _propTypes2.default.number,\n    char: _propTypes2.default.string,\n    size: _propTypes2.default.number,\n    color: _propTypes2.default.string,\n    activeColor: _propTypes2.default.string,\n    emptyIcon: _propTypes2.default.element,\n    halfIcon: _propTypes2.default.element,\n    filledIcon: _propTypes2.default.element,\n    a11y: _propTypes2.default.bool\n};\n\nReactStars.defaultProps = {\n    edit: true,\n    half: false,\n    value: 0,\n    count: 5,\n    char: '★',\n    size: 15,\n    color: 'gray',\n    activeColor: '#ffd700',\n    a11y: true,\n\n    onChange: function onChange() {}\n};\n\nexports.default = ReactStars;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = Star;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultStyles = {\n    position: \"relative\",\n    overflow: \"hidden\",\n    cursor: \"pointer\",\n    display: \"block\",\n    float: \"left\"\n};\n\nfunction Star(props) {\n    var index = props.index,\n        active = props.active,\n        config = props.config,\n        onMouseOver = props.onMouseOver,\n        onMouseLeave = props.onMouseLeave,\n        onClick = props.onClick,\n        halfStarHidden = props.halfStarHidden,\n        halfStarAt = props.halfStarAt,\n        isUsingIcons = props.isUsingIcons,\n        uniqueness = props.uniqueness;\n    var color = config.color,\n        activeColor = config.activeColor,\n        size = config.size,\n        char = config.char,\n        isHalf = config.isHalf,\n        edit = config.edit,\n        halfIcon = config.halfIcon,\n        emptyIcon = config.emptyIcon,\n        filledIcon = config.filledIcon;\n\n\n    var starClass = '';\n    var half = false;\n\n    if (isHalf && !halfStarHidden && halfStarAt === index) {\n        if (!isUsingIcons) starClass = \"react-stars-\" + uniqueness;else starClass = 'react-stars-half';\n        half = true;\n    }\n\n    var style = _extends({}, defaultStyles, {\n        color: active ? activeColor : color,\n        cursor: edit ? 'pointer' : 'default',\n        fontSize: size + \"px\"\n    });\n\n    function renderIcon() {\n        if (!isUsingIcons) {\n            return char;\n        } else {\n            if (active) {\n                return filledIcon;\n            } else if (!active && half) {\n                return halfIcon;\n            } else {\n                return emptyIcon;\n            }\n        }\n    }\n\n    return _react2.default.createElement(\n        \"span\",\n        {\n            className: starClass,\n            style: style,\n            key: index,\n            \"data-index\": index,\n            \"data-forhalf\": filledIcon ? index : char,\n            onMouseOver: onMouseOver,\n            onMouseMove: onMouseOver,\n            onMouseLeave: onMouseLeave,\n            onClick: onClick },\n        renderIcon()\n    );\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["Object","defineProperty","exports","value","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","sliceIterator","TypeError","config","_useState","_react","useState","count","_useState2","setCount","_useState3","size","_useState4","setSize","_useState5","char","_useState6","setChar","_useState7","color","_useState8","setColor","_useState9","activeColor","_useState10","setActiveColor","_useState11","isHalf","_useState12","setIsHalf","_useState13","edit","_useState14","setEdit","_useState15","emptyIcon","_useState16","setEmptyIcon","_useState17","halfIcon","_useState18","setHalfIcon","_useState19","filledIcon","_useState20","setFilledIcon","_useState21","a11y","_useState22","setA11y","require","_react2","_interopRequireDefault","_propTypes2","_useConfig4","_star2","obj","__esModule","default","parentStyles","overflow","position","getHalfStarStyles","uniqueness","ReactStars","props","setUniqueness","currentValue","setCurrentValue","stars","setStars","isUsingIcons","setIsUsingIcons","_useConfig","_useConfig2","setConfig","halfStarAt","setHalfStarAt","halfStarHidden","setHalfStarHidden","classNames","setClassNames","getStars","activeCount","Math","floor","round","active","mouseOver","event","index","Number","currentTarget","getAttribute","isAtHalf","moreThanHalf","currentActive","filter","x","updateStars","boundingClientRect","target","getBoundingClientRect","mouseAt","clientX","left","abs","width","mouseLeave","updateHalfStarValues","isDecimal","onClick","currentValueUpdated","onChange","useEffect","reactStarsClass","addClassNames","random","replace","iconsUsed","createElement","className","style","display","tabIndex","onKeyDown","key","keyNumber","isInteger","preventDefault","dangerouslySetInnerHTML","__html","renderHalfStarStyleElement","map","star","onMouseOver","onMouseLeave","role","propTypes","string","bool","half","number","element","defaultProps","_extends","assign","arguments","source","prototype","hasOwnProperty","call","starClass","defaultStyles","cursor","fontSize","onMouseMove","float","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","parse","parseFloat","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","height","maxHeight","top","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","camelToDash","str","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","this","order","scheduled","process","add","splice","delete","clear","stepsOrder","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}