{"version":3,"file":"static/js/731.c88feb4b.chunk.js","mappings":"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","sources":["components/AdminAddItemForm.jsx","components/AdminAddItem.jsx","pages/AdminAddItemPage.jsx","redux/filtersAdmin/selectors.js","redux/options/selectors.js"],"sourcesContent":["import { Formik, Form, Field, FieldArray } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\nimport { BsPlusLg } from 'react-icons/bs';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getCategories } from 'redux/categories/operetions';\nimport { selectCategiries } from 'redux/categories/selectors';\nimport { getFilters } from 'redux/filtersAdmin/operetions';\nimport { selectFilters } from 'redux/filtersAdmin/selectors';\nimport { addItem } from 'redux/items/operetions';\nimport { getOptions } from 'redux/options/operetions';\nimport { selectOptions } from 'redux/options/selectors';\n\nconst AdminAddItemForm = () => {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategiries);\n  const options = useSelector(selectOptions);\n  const filters = useSelector(selectFilters);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [selectedOptionValues, setSelectedOptionValues] = useState([]);\n  const [chooseFilters, setChooseFilters] = useState([]);\n  const [chooseFilterOptions, setChooseFilterOptions] = useState([]);\n  const [selectFile, setSelectFile] = useState(null);\n  const fileRef = useRef();\n  const navigate = useNavigate();\n\n  const handleChangeOption = e => {\n    const { value, checked, attributes } = e.target;\n    const optionId = attributes.opt_val.value;\n\n    if (checked) {\n      setSelectedOptions(prev => [\n        ...prev,\n        {name: value, optionId: optionId, options: []}\n      ]);\n    } else {\n      setSelectedOptions(selectedOptions.filter(item => item.name !== value));\n    }\n  };\n\n  const handleChangeOptionValues = e => {\n    const { value, checked, attributes } = e.target;\n    const optionId = attributes.opt_val.value;\n    \n    if (checked) {\n      setSelectedOptionValues(prev => [...prev, value])\n      setSelectedOptions(prevOptions => {\n        return prevOptions.map(option => {\n          if (option.optionId === optionId) {\n            // Оновлюємо об'єкт з поточним optionId\n            return {\n              ...option,\n              options: [\n                ...option.options,\n                { name: value, price: null, optionId: optionId },\n              ],\n            };\n          }\n          return option;\n        });\n      });\n    } else {\n      // Видалити відповідний об'єкт із вибраних options\n      setSelectedOptionValues(prev => prev.filter(item => item !== value))\n      setSelectedOptions(prevOptions => {\n        return prevOptions.map(option => {\n          if (option.optionId === optionId) {\n            return {\n              ...option,\n              options: option.options.filter(item => item.name !== value),\n            };\n          }\n          return option;\n        });\n      });\n    }\n  };\n\n  const handleChangeFilter = e => {\n    const { value, checked, attributes } = e.target;\n    const filterId = attributes.filter_val.value;\n\n    if (checked) {\n      setChooseFilters(prev => [...prev, {name: value, filterId: filterId, options: []}]);\n    } else {\n      setChooseFilters(chooseFilters.filter(item => item !== value));\n    }\n  };\n\n  const handleChangeFilterOptions = e => {\n    const { value, checked, attributes } = e.target;\n    const filterId = attributes.filter_val.value;\n \n    if (checked) {\n      setChooseFilterOptions(prev => [...prev, value])\n      setChooseFilters(prevFilters => {\n        return prevFilters.map(item => {\n          if(item.filterId === filterId){\n            return {\n              ...item,\n              options: [\n                ...item.options,\n                {name: value, filterId: filterId}\n              ]\n            }\n          }\n          return item;\n        })\n      })\n    } else {\n      setChooseFilterOptions(prev => prev.filter(item => item !== value));\n      setChooseFilters(prev => {\n        return prev.map(item => {\n          if(item.filterId === filterId){\n            return {\n              ...item,\n              options: item.options.filter(option => option.name !== value)\n            }\n          }\n          return item;\n        })\n      })\n    }\n  };\n\n  const handleSelectFile = e => {\n    const files = e.target.files;\n    const selectedImagesArray = Array.from(files);\n    setSelectFile(selectedImagesArray);\n  };\n\n  const onChangeOptionPrice = (e, nameOption) => {\n    const { value } = e.target;\n    console.log(nameOption);\n    const options = selectedOptions.flatMap(item => item.options);\n    const findOption = options.find(item => item.name === nameOption);\n\n    findOption.price = Number(value);\n  };\n\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(getFilters());\n    dispatch(getOptions());\n  }, [dispatch]);\n\n  const initialValues = {\n    title: '',\n    desc: '',\n    price: '',\n    oldPrice: '',\n    status: '',\n    article: '',\n    categoryName: '',\n    hitSales: false,\n    characteristics: [],\n    care: '',\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    const {\n      title,\n      desc,\n      price,\n      oldPrice,\n      status,\n      article,\n      categoryName,\n      hitSales,\n      characteristics,\n      care\n    } = values;\n\n    const data = new FormData();\n    data.append('title', title);\n\n      data.append('desc', desc);\n   \n    data.append('hitSales', hitSales);\n    data.append('care', care);\n    data.append('price', price);\n    if (oldPrice) {\n      data.append('oldPrice', oldPrice);\n    }\n    if (characteristics) {\n      data.append('characteristics', JSON.stringify(characteristics));\n    }\n    data.append('status', status);\n    data.append('article', article);\n    data.append('categoryName', categoryName);\n    if (selectedOptions) {\n      data.append('options', JSON.stringify(selectedOptions));\n    }\n    if (chooseFilters) {\n      data.append('filters', JSON.stringify(chooseFilters));\n    }\n    if (selectFile) {\n      for (let i = 0; i < selectFile.length; i++) {\n        data.append('imageItem', selectFile[i]);\n      }\n    }\n    console.log(data);\n    dispatch(addItem(data));\n    navigate('/admin/items');\n    resetForm();\n  };\n  return (\n    <div className=\"flex items-start gap-[15px]\">\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        {({ values }) => {\n          return (\n            <Form className=\"w-full flex flex-col gap-[15px]\">\n              <div className=\"grid grid-cols-1 items-center gap-[15px]\">\n                <div className=\"flex flex-col gap-[15px]\">\n                  <h3 className=\"text-[18px] font-medium\">\n                    Title item <span className=\"text-red-500\">*</span>\n                  </h3>\n                  <Field\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title item\"\n                    className=\"bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-col gap-[15px]\">\n                  <h3 className=\"text-[18px] font-medium\">\n                    Article item <span className=\"text-red-500\">*</span>\n                  </h3>\n                  <Field\n                    name=\"article\"\n                    type=\"text\"\n                    placeholder=\"Article item\"\n                    className=\"bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 items-center gap-[15px]\">\n                <div className=\"flex flex-col gap-[15px]\">\n                  <h3 className=\"text-[18px] font-medium\">\n                    Price item <span className=\"text-red-500\">*</span>\n                  </h3>\n                  <Field\n                    name=\"price\"\n                    type=\"text\"\n                    placeholder=\"Price item\"\n                    className=\"bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-col gap-[15px]\">\n                  <h3 className=\"text-[18px] font-medium\">Old price item</h3>\n                  <Field\n                    name=\"oldPrice\"\n                    type=\"text\"\n                    placeholder=\"Old price  item\"\n                    className=\"bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 items-center gap-[15px]\">\n                <div className=\"flex flex-col gap-[15px]\">\n                  <h3 className=\"text-[18px] font-medium\">\n                    Choose category<span className=\"text-red-500\">*</span>\n                  </h3>\n                  <Field\n                    name=\"categoryName\"\n                    as=\"select\"\n                    className=\"bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[18px] font-medium text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                  >\n                    <option value=\"\">--Choose a categoty--</option>\n                    {categories?.map(({ title, _id: id }) => {\n                      return (\n                        <option key={id} value={title}>\n                          {title}\n                        </option>\n                      );\n                    })}\n                  </Field>\n                </div>\n\n                <div className=\"flex flex-col gap-[15px]\">\n                  <h3 className=\"text-[18px] font-medium\">Choose status</h3>\n                  <Field\n                    name=\"status\"\n                    as=\"select\"\n                    className=\"bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                  >\n                    <option value=\"\">--Choose a status--</option>\n                    <option value=\"В наявності\">В наявності</option>\n                    <option value=\"Закінчується\">Закінчується</option>\n                    <option value=\"Немає в наявності\">Немає в наявності</option>\n                  </Field>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-[24px] font-medium\">Choose options</h3>\n                <ul className=\"flex flex-col gap-[15px]\">\n                  {options?.map(({ optionValues, name, _id: id }, idx) => {\n                    return (\n                      <li key={id}>\n                        <label className=\"flex items-center gap-[10px]\">\n                          <Field\n                            name={`${options}[${idx}].${name}`}\n                            opt_val={id}\n                            checked={selectedOptions?.find(item => item.name === name)}\n                            type=\"checkbox\"\n                            value={name}\n                            onChange={handleChangeOption}\n                          />\n                          <h3 className=\"text-[18px] font-semibold\">{name}</h3>\n                        </label>\n                        {selectedOptions.find(item => item.name === name) &&\n                          optionValues?.map(({ name }, idx) => {\n                            return (\n                              <>\n                                <label\n                                  className=\"flex items-center gap-[10px]\"\n                                  key={idx}\n                                >\n                                  <Field\n                                    name={`${options}[${idx}].${name}`}\n                                    opt_val={id}\n                                    value={name}\n                                  checked={selectedOptionValues.find(item => item === name)}\n                                    onChange={handleChangeOptionValues}\n                                    type=\"checkbox\"\n                                  />\n                                  <h3 className=\"text-[16px] font-medium\">\n                                    {name}\n                                  </h3>\n                                </label>\n                                {selectedOptionValues?.find(\n                                  item => item === name\n                                ) && (\n                                  <input\n                                    type=\"text\"\n                                    placeholder=\"Type price for option\"\n                                    onChange={e => {\n                                      const nameOption =\n                                        selectedOptionValues?.find(\n                                          item => item === name\n                                        );\n                                      onChangeOptionPrice(e, nameOption);\n                                    }}\n                                  />\n                                )}\n                              </>\n                            );\n                          })}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n\n              <div>\n                <h3 className=\"text-[24px] font-medium\">Choose filters</h3>\n                <ul>\n                  {filters?.map(({ name, filterValue, _id: id }, idx) => {\n                    return (\n                      <li key={id}>\n                        <label className=\"flex items-center gap-[10px]\">\n                          <Field\n                            name={`${filters}[${idx}].${name}`}\n                            filter_val={id}\n                            value={name}\n                            type=\"checkbox\"\n                            checked={chooseFilters.find(item => item.name === name)}\n                            onChange={handleChangeFilter}\n                          />\n                          <h3 className=\"text-[18px] font-semibold\">{name}</h3>\n                        </label>\n                        {chooseFilters.find(item => item.name === name) &&\n                          filterValue?.map(({ name }, idx) => {\n                            return (\n                              <label className=\"flex items-center gap-[10px]\">\n                                <Field\n                                  name={`${filters}[${idx}].${name}`}\n                                  value={name}\n                                  filter_val={id}\n                                  type=\"checkbox\"\n                                  checked={chooseFilterOptions.find(\n                                    item => item === name\n                                  )}\n                                  onChange={handleChangeFilterOptions}\n                                />\n                                <h3 className=\"text-[16px] font-medium\">\n                                  {name}\n                                </h3>\n                              </label>\n                            );\n                          })}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n\n              <div>\n                <FieldArray\n                  name=\"characteristics\"\n                  render={arrayHelpers => (\n                    <div className=\"flex flex-col gap-[15px]\">\n                      <div className=\"flex items-center gap-[15px]\">\n                        <h2 className=\"text-[24px] font-bold\">\n                          Add characteristics\n                        </h2>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            arrayHelpers.push({ name: '', option: '' })\n                          }\n                          className=\"p-[15px] bg-[#343a40] rounded-[5px] w-[34px] h-[34px] relative\"\n                        >\n                          <BsPlusLg className=\"text-[#fff] text-[24px] absolute top-[5px] left-[5px]\" />\n                        </button>\n                      </div>\n                      <div className=\"flex flex-col gap-[15px]\">\n                        {values.characteristics &&\n                          values.characteristics.length > 0 &&\n                          values.characteristics?.map((item, index) => {\n                            return (\n                              <>\n                                <div className=\"flex items-center gap-[10px]\">\n                                  <label className=\"flex flex-col gap-[10px]\">\n                                    Name\n                                    <Field\n                                      name={`characteristics[${index}].name`}\n                                    />\n                                  </label>\n\n                                  <label className=\"flex flex-col gap-[10px]\">\n                                    Option\n                                    <Field\n                                      name={`characteristics[${index}].option`}\n                                    />\n                                  </label>\n\n                                  <button\n                                    type=\"button\"\n                                    onClick={() => arrayHelpers.remove(index)}\n                                  >\n                                    <RiDeleteBinLine className=\"w-[24px] h-[24px] text-red-500\" />\n                                  </button>\n                                </div>\n                              </>\n                            );\n                          })}\n                      </div>\n                    </div>\n                  )}\n                />\n              </div>\n\n              <div>\n                <h3 className=\"text-[18px] font-medium\">Care for item</h3>\n                <Field\n                  name=\"care\"\n                  as=\"textarea\"\n                  placeholder=\"Care for item\"\n                  className=\"bg-transparent resize-none border border-solid border-[#7FAA84] w-full h-[350px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                />\n              </div>\n\n              <div className=\"flex flex-col gap-[15px] items-start\">\n                <h3 className=\"text-[24px] font-medium\">Hot sales</h3>\n                <Field name=\"hitSales\" type=\"checkbox\" />\n              </div>\n\n              <div className=\"flex flex-col gap-[15px]\">\n                <h3 className=\"text-[18px] font-medium\">Description item</h3>\n                <Field\n                  name=\"desc\"\n                  as=\"textarea\"\n                  placeholder=\"Description item\"\n                  className=\"bg-transparent resize-none border border-solid border-[#7FAA84] w-full h-[350px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"py-[15px] px-[25px] bg-[#7FAA84] rounded-[5px] text-[#fff] text-[16px] font-medium w-[220px]\"\n              >\n                Create item\n              </button>\n            </Form>\n          );\n        }}\n      </Formik>\n\n      <div className=\"flex flex-col gap-[15px]\">\n        <div>\n          <input\n            type=\"file\"\n            className=\"hidden\"\n            multiple\n            ref={fileRef}\n            onChange={handleSelectFile}\n          />\n          <button\n            type=\"button\"\n            onClick={() => fileRef.current.click()}\n            className=\"text-gray-300 bg-gray-600 text-sm flex justify-center items-center border-2 border-dotted cursor-pointer py-4 w-[350px]\"\n          >\n            Add file\n          </button>\n        </div>\n\n        {selectFile && (\n          <ul className=\"flex flex-col gap-[10px]\">\n            {selectFile.map((image, index) => (\n              <li key={index}>\n                <img\n                  src={URL.createObjectURL(image)}\n                  alt={image.name}\n                  className=\"w-[350px] h-[150px]\"\n                />\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminAddItemForm;\n","import AdminAddItemForm from \"./AdminAddItemForm\"\n\nconst AdminAddItem = () => {\n  return  <div className=\"p-[15px] flex flex-col gap-[25px] w-full\">\n  <h1 className=\"text-[24px] font-bold\">Add item</h1>\n  <AdminAddItemForm/>\n</div>\n}\n\nexport default AdminAddItem\n","import AdminAddItem from \"components/AdminAddItem\"\n\nconst AdminAddItemPage = () => {\n  return <AdminAddItem/>\n}\n\nexport default AdminAddItemPage\n","export const selectFilters = state => state.filterAdmin.filters;\n\nexport const selectFilter = state => state.filterAdmin.filter;","export const selectOptions = state => state.option.options;\n\nexport const selectOption = state => state.option.option;\n"],"names":["dispatch","useDispatch","categories","useSelector","selectCategiries","options","selectOptions","filters","selectFilters","useState","selectedOptions","setSelectedOptions","selectedOptionValues","setSelectedOptionValues","chooseFilters","setChooseFilters","chooseFilterOptions","setChooseFilterOptions","selectFile","setSelectFile","fileRef","useRef","navigate","useNavigate","handleChangeOption","e","target","value","checked","optionId","attributes","opt_val","prev","name","filter","item","handleChangeOptionValues","prevOptions","map","option","price","handleChangeFilter","filterId","filter_val","handleChangeFilterOptions","prevFilters","useEffect","getCategories","getFilters","getOptions","className","initialValues","title","desc","oldPrice","status","article","categoryName","hitSales","characteristics","care","onSubmit","values","resetForm","data","FormData","append","JSON","stringify","i","length","console","log","addItem","type","placeholder","as","id","_id","idx","optionValues","find","onChange","nameOption","flatMap","Number","onChangeOptionPrice","filterValue","render","arrayHelpers","onClick","push","index","remove","multiple","ref","files","selectedImagesArray","Array","from","current","click","image","src","URL","createObjectURL","alt","state","filterAdmin","selectFilter","selectOption"],"sourceRoot":""}