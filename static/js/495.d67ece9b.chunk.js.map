{"version":3,"file":"static/js/495.d67ece9b.chunk.js","mappings":"uQAOMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GAAW,6BAA6BE,SAC7C,4BAEFC,MAAOH,EAAAA,KACPI,KAAMJ,EAAAA,OA8GR,EA3G4B,SAAC,GAAgB,IAAfK,EAAc,EAAdA,SACnBJ,EAAsBI,EAAtBJ,MAAOG,EAAeC,EAAfD,KAAMD,EAASE,EAATF,MACdG,GAAWC,EAAAA,EAAAA,MACjB,GAAqBC,EAAAA,EAAAA,UAASL,GAAvBM,GAAP,eACA,GAAwCD,EAAAA,EAAAA,UAAS,IAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACMC,GAAUC,EAAAA,EAAAA,UACTC,GAAcC,EAAAA,EAAAA,MAAdD,WACDE,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,CACpBjB,MAAOA,EACPG,KAAMA,GAsBV,OAAQ,iBAAKe,UAAU,oCAAf,WACJ,eAAIA,UAAU,wBAAd,6BACHd,IAAY,SAAC,KAAD,CACXa,cAAeA,EACfE,SAvBiB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAClBrB,EAAeoB,EAAfpB,MAAOG,EAAQiB,EAARjB,KACRmB,EAAe,IAAIC,SACzBD,EAAaE,OAAO,QAASxB,GAC7BsB,EAAaE,OAAO,OAAQrB,GACzBM,GACDa,EAAaE,OAAO,YAAaf,GAEnCJ,GAASoB,EAAAA,EAAAA,IAAe,CAACH,aAAAA,EAAcT,WAAAA,KACvCH,EAAgB,MAChBK,EAAS,mBACTM,GACD,EAYDvB,iBAAkBA,EAHP,UAKX,UAAC,KAAD,CAAMoB,UAAU,2BAAhB,WACE,4BACE,kBACEQ,KAAK,OACLR,UAAU,SACVS,IAAKhB,EACLiB,SAlBiB,SAAAC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5BtB,EAAgBoB,EACjB,KAiBC,mBACEJ,KAAK,SACLR,UAAU,0HACVe,QAAS,WACPtB,EAAQuB,QAAQC,OACjB,EALH,yBAWA1B,GASM,iCACN,gBAAKS,UAAU,sBAAf,UACC,gBACGkB,IAAKC,IAAIC,gBAAgB7B,GACzB8B,IAAI,eACJrB,UAAU,oCAGd,mBAAQQ,KAAK,SAASR,UAAU,+FAA+Fe,QAAS,kBAAMvB,EAAgB,KAAtB,EAAxI,6BAjBe,iCACf,gBAAKQ,UAAU,sBAAf,UACC,gBACGkB,IAAK5B,EACL+B,IAAI,eACJrB,UAAU,oCAGd,mBAAQQ,KAAK,SAASR,UAAU,+FAA+Fe,QAAS,kBAAMvB,EAAgB,KAAtB,EAAxI,6BAYF,kBAAOQ,UAAU,0BAAjB,UACA,iBAAKA,UAAU,2BAAf,WACQ,4CAEE,iBAAMA,UAAU,eAAhB,mBAEV,SAAC,KAAD,CACEsB,KAAK,QACLd,KAAK,OACLe,YAAY,wBACZvB,UAAU,oLAEZ,SAAC,KAAD,CAAcsB,KAAK,QAAQE,UAAU,IAAIxB,UAAU,8FAInD,kBAAOA,UAAU,0BAAjB,UACI,iBAAKA,UAAU,2BAAf,WACD,kDACC,SAAC,KAAD,CAAOyB,GAAG,WAAWjB,KAAK,OAAOc,KAAK,OAAOC,YAAY,8BAA8BvB,UAAU,yLAGrG,mBAAQQ,KAAK,SAASR,UAAU,+FAAhC,oCAIL,E,UCrGD,EAZgC,WAChC,IAAMb,GAAWC,EAAAA,EAAAA,MACXF,GAAWwC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBhC,GAAcC,EAAAA,EAAAA,MAAdD,WAML,OAJFiC,EAAAA,EAAAA,YAAU,WACPzC,GAAS0C,EAAAA,EAAAA,IAAYlC,GACvB,GAAE,CAACR,EAAUQ,KAEL,8BAAGT,IAAY,SAAC,EAAD,CAAqBA,SAAUA,KACtD,C","sources":["components/AdminCategoryUpdate.jsx","pages/AdminCategoryUpdatePage.jsx"],"sourcesContent":["import { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateCategory } from 'redux/categories/operetions';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst validationSchema = Yup.object({\n  title: Yup.string('Type name of the category').required(\n    'Category name is require'\n  ),\n  image: Yup.string(),\n  desc: Yup.string(),\n});\n\nconst AdminCategoryUpdate = ({category}) => {\n    const {title, desc, image} = category;\n    const dispatch = useDispatch();\n    const [currentImg] = useState(image)\n    const [selectedFile, setSelectedFile] = useState('');\n    const fileRef = useRef();\n    const {categoryId} = useParams();\n    const navigate = useNavigate();\n  \n    const initialValues = {\n      title: title,\n      desc: desc,\n    };\n  \n    const onSubmit = (value, { resetForm }) => {\n      const {title, desc} = value;\n      const categoryData = new FormData();\n      categoryData.append('title', title);\n      categoryData.append('desc', desc);\n      if(selectedFile){\n        categoryData.append('updateImg', selectedFile)\n      }\n      dispatch(updateCategory({categoryData, categoryId}))\n      setSelectedFile(null)\n      navigate('/admin/category')\n      resetForm();\n    };\n\n    const setCategoryImg = e => {\n        const file = e.target.files[0];\n        setSelectedFile(file);\n      };\n\n  return  <div className=\"p-[15px] flex flex-col gap-[15px]\">\n      <h1 className=\"text-[24px] font-bold\">Update category</h1>\n  {category && <Formik\n    initialValues={initialValues}\n    onSubmit={onSubmit}\n    validationSchema={validationSchema}\n  >\n    <Form className='flex flex-col gap-[30px]'>\n      <div>\n        <input\n          type=\"file\"\n          className=\"hidden\"\n          ref={fileRef}\n          onChange={setCategoryImg}\n        />\n        <button\n          type=\"button\"\n          className=\"text-gray-300 bg-gray-600 text-sm flex justify-center items-center border-2 border-dotted cursor-pointer py-4 w-[350px]\"\n          onClick={() => {\n            fileRef.current.click();\n          }}\n        >\n          Add file\n        </button>\n      </div>\n  \n      {!selectedFile ? <>\n        <div className=\"w-[350px] h-[400px]\">\n         <img\n            src={currentImg}\n            alt=\"Category img\"\n            className=\"object-contain w-full h-full\"\n          /> \n        </div>\n        <button type='button' className='py-[13px] px-[25px] bg-[#EF787A] rounded-[5px] text-[#fff] text-[16px] font-medium w-[150px]' onClick={() => setSelectedFile(null)}>Remove file</button>\n        </> : <>\n        <div className=\"w-[350px] h-[400px]\">\n         <img\n            src={URL.createObjectURL(selectedFile)}\n            alt=\"Category img\"\n            className=\"object-contain w-full h-full\"\n          /> \n        </div>\n        <button type='button' className='py-[13px] px-[25px] bg-[#EF787A] rounded-[5px] text-[#fff] text-[16px] font-medium w-[150px]' onClick={() => setSelectedFile(null)}>Remove file</button>\n        </>}\n  \n      <label className='text-[18px] font-medium'>\n      <div className=\"flex flex-col gap-[10px]\">\n              <h3>\n                Title category\n                <span className=\"text-red-500\">*</span>\n              </h3>\n      <Field\n        name=\"title\"\n        type=\"text\"\n        placeholder=\"Title of the category\"\n        className=\"bg-transparent border border-solid border-[#7FAA84] w-[380px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n      />\n      <ErrorMessage name='title' component='p' className='text-[#EF787A] text-[16px] font-semibold tracking-[0.32px] leading-[24px] mt-[15px]'/>\n      </div>\n      </label>\n  \n      <lable className='text-[18px] font-medium'>\n          <div className=\"flex flex-col gap-[10px]\">\n         <h3>Description category</h3>\n          <Field as=\"textarea\" type='text' name='desc' placeholder=\"Description of the category\" className='bg-transparent border border-solid border-[#7FAA84] w-[380px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'/>\n          </div>\n      </lable>\n      <button type='submit' className=\"py-[15px] px-[25px] bg-[#7FAA84] rounded-[5px] text-[#fff] text-[16px] font-medium w-[220px]\">Update category</button>\n    </Form>\n  </Formik>}\n  </div>\n}\n\nexport default AdminCategoryUpdate\n","import AdminCategoryUpdate from \"components/AdminCategoryUpdate\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCategory } from \"redux/categories/operetions\";\nimport { selectCategory } from \"redux/categories/selectors\";\n\nconst AdminCategoryUpdatePage = () => {\nconst dispatch = useDispatch()\nconst category = useSelector(selectCategory);\nconst {categoryId} = useParams();\n\nuseEffect(() => {\n   dispatch(getCategory(categoryId));\n}, [dispatch, categoryId])\n\n  return <>{category && <AdminCategoryUpdate category={category}/>}</>\n}\n\nexport default AdminCategoryUpdatePage\n"],"names":["validationSchema","Yup","title","required","image","desc","category","dispatch","useDispatch","useState","currentImg","selectedFile","setSelectedFile","fileRef","useRef","categoryId","useParams","navigate","useNavigate","initialValues","className","onSubmit","value","resetForm","categoryData","FormData","append","updateCategory","type","ref","onChange","e","file","target","files","onClick","current","click","src","URL","createObjectURL","alt","name","placeholder","component","as","useSelector","selectCategory","useEffect","getCategory"],"sourceRoot":""}