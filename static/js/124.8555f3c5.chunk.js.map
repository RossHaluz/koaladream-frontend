{"version":3,"file":"static/js/124.8555f3c5.chunk.js","mappings":"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","sources":["components/AdminItemUpdate.jsx","pages/AdminItemUpdatePage.jsx","redux/filtersAdmin/selectors.js","redux/options/selectors.js"],"sourcesContent":["import { Formik, Form, Field, FieldArray } from \"formik\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { BsPlusLg } from \"react-icons/bs\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCategories } from \"redux/categories/operetions\";\nimport { selectCategiries } from \"redux/categories/selectors\";\nimport { getFilters } from \"redux/filtersAdmin/operetions\";\nimport { selectFilters } from \"redux/filtersAdmin/selectors\";\nimport { updateItem } from \"redux/items/operetions\";\nimport { getOptions } from \"redux/options/operetions\";\nimport { selectOptions } from \"redux/options/selectors\";\n\nconst AdminItemUpdate = ({item}) => {\n\n    const {title, desc, images, price, oldPrice, care, characteristics, status, categoryName, article, options, filters, hitSales, _id: itemId} = item;\n    console.log(filters);\n\n    const dispatch = useDispatch();\n    const categories = useSelector(selectCategiries);\n    const allOptions = useSelector(selectOptions);\n    const allFilters = useSelector(selectFilters);\n    const [selectedOptions, setSelectedOptions] = useState(JSON.parse(options));\n    const [selectedOptionValues, setSelectedOptionValues] = useState(JSON.parse(options).flatMap(item => item.options))\n    const [chooseFilters, setChooseFilters] = useState(JSON.parse(filters));\n    const [chooseFilterOptions, setChooseFilterOptions] = useState(JSON.parse(filters).flatMap(item => item.options));\n    const [currentImg] = useState(images.map(item => item));\n    const [selectFile, setSelectFile] = useState(null);\n    const fileRef = useRef();\n    const navigate = useNavigate();\n\n    console.log(chooseFilterOptions);\n\n    const handleChangeOption = e => {\n       const {value, checked, attributes} = e.target;\n       const optionId = attributes.opt_val.value;\n\n       if (checked) {\n          setSelectedOptions(prev => [\n            ...prev,\n            {name: value, optionId: optionId, options: selectedOptions}\n          ]);\n        } else {\n          setSelectedOptions(selectedOptions.filter(item => item.name !== value));\n        }\n    }\n \n    const handleChangeOptionValues = e => {\n       const {value, checked, attributes} = e.target;\n       const optionId = attributes.opt_val.value;\n\n       if(checked){\n          setSelectedOptionValues(prev => [...prev, { name: value, price: null, optionId: optionId }])\n          setSelectedOptions(prevOptions => {\n            return prevOptions.map(item => {\n               if(item.optionId === optionId){\n                  return {\n                     ...item, \n                     options: [\n                        ...item.options,\n                        { name: value, price: null, optionId: optionId }\n                     ]\n                  }\n               }\n               return item;\n            })\n          })\n       } else {\n         setSelectedOptionValues(prev => prev.filter(item => item.name !== value))\n         setSelectedOptions(prev => {\n            return prev.map(option => {\n               if(option.optionId === optionId){\n                  return {\n                     ...option,\n                     options: option.options.filter(item => item.name !== value)\n                  }\n               }\n               return option;\n            })\n         })\n        }\n    }\n \n    const handleChangeFilter = e => {\n       const {value, checked, attributes} = e.target;\n       const filterId = attributes.filter_val.value;\n \n       if(checked){\n          setChooseFilters(prev => [...prev, {name: value, filterId: filterId, options: chooseFilters}]);\n       }else{\n          setChooseFilters(chooseFilters.filter(item => item.name!== value))\n       }\n    }\n \n    const handleChangeFilterOptions = e => {\n       const {value, checked, attributes} = e.target;\n       const filterId = attributes.filter_val.value;\n\n       if(checked){\n         setChooseFilterOptions(prev => [...prev, {name: value, filterId: filterId}]);\n         setChooseFilters(prevFilters => {\n            return prevFilters.map(option => {\n               if(option.filterId === filterId){\n                  return {\n                     ...option,\n                     options: [\n                        ...option.options,\n                        {name: value, filterId: filterId}\n                     ]\n                  }\n               }\n               return option\n            })\n         })\n       }else{\n         setChooseFilterOptions(prev => prev.filter(item => item.name !== value))\n         setChooseFilters(prevFilters => {\n            return prevFilters.map(item => {\n               if(item.filterId === filterId){\n                  return {\n                     ...item,\n                     options: item.options.filter(item => item.name !== value)\n                  }\n               }\n               return item;\n            })\n         })\n       }\n    }\n\n    const onChangeOptionPrice = (e, nameOption) => {\n      const {value} = e.target;\n      const options = selectedOptions.flatMap(item => item.options);\n      const findOption = options.find(item => item.name === nameOption.name);\n      findOption.price = Number(value)\n    }\n\n    const handleSelectFile = (e) => {\n       const files = e.target.files;\n       const selectedImagesArray = Array.from(files);\n      setSelectFile(selectedImagesArray);\n    }\n \n \n useEffect(() => {\n    dispatch(getCategories())\n    dispatch(getFilters());\n    dispatch(getOptions())\n }, [dispatch])\n \n     const initialValues = {\n         title: title,\n         desc: desc,\n         price: price,\n         oldPrice: oldPrice,\n         status: status,\n         article: article,\n         categoryName: categoryName,\n         hitSales: hitSales,\n         characteristics: characteristics.length > 0 ? JSON.parse(characteristics) : [],\n         care: care || ''\n     }\n \n     const onSubmit = (values, { resetForm }) => {\n       const {title, desc, price, oldPrice, status, article, characteristics, categoryName, hitSales} = values;\n       const data = new FormData();\n       data.append('title', title);\n         data.append('desc', desc);\n       data.append('hitSales', hitSales);\n       data.append('price', price);\n          data.append('oldPrice', oldPrice);\n    \n       data.append('status', status);\n       data.append('article', article);\n       data.append('categoryName', categoryName);\n       if(selectedOptions){\n          data.append('options', JSON.stringify(selectedOptions));\n       }\n       if (characteristics) {\n         data.append('characteristics', JSON.stringify(characteristics));\n       }\n       if(chooseFilters){\n          data.append('filters', JSON.stringify(chooseFilters));\n       }\n       data.append('care', care);\n\n       if(selectFile){\n         for (let i = 0; i < selectFile.length; i++) {\n          data.append('updateImage', selectFile[i]);\n         }\n       }else{\n         currentImg.map(item => {\n           return data.append('`updateImage`', item)\n         })\n\n       }\n    \n      \n      dispatch(updateItem({data, itemId}))\n      navigate('/admin/items')\n      resetForm()\n     };\n \n   return (\n    <div className=\"p-[15px] flex  gap-[15px]\">\n        <div className=\"w-full\">\n    <h1 className=\"text-[24px] font-bold\">Eddit item</h1>\n      <Formik \n     initialValues={initialValues}\n     onSubmit={onSubmit}\n     >\n      {({values}) => {\n      return (\n         <Form className=\"w-full flex flex-col gap-[15px]\">\n     <div className=\"grid grid-cols-1 items-center gap-[15px]\">\n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Title item <span className=\"text-red-500\">*</span></h3>\n         <Field name='title' type='text' placeholder='Title item' className='bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'/>\n      </div>\n \n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Article item <span className=\"text-red-500\">*</span></h3>\n         <Field name='article' type='text' placeholder='Article item' className='bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'/>\n      </div>\n      </div>\n \n      <div className=\"grid grid-cols-1 items-center gap-[15px]\">\n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Price item <span className=\"text-red-500\">*</span></h3>\n         <Field name='price' type='text' placeholder='Price item' className='bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'/>\n      </div>\n \n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Old price item</h3>\n         <Field name='oldPrice' type='text' placeholder='Old price  item' className='bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'/>\n      </div>\n      </div>\n \n      <div className=\"grid grid-cols-1 items-center gap-[15px]\">\n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Choose category<span className=\"text-red-500\">*</span></h3>\n         <Field name='categoryName' as=\"select\" className='bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[18px] font-medium text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'>\n          <option value=\"\">--Choose a categoty--</option>\n          {categories?.map(({title, _id: id}) => {\n             return <option key={id} value={title}>{title}</option>\n          })}\n         </Field>\n      </div>\n \n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Choose status</h3>\n         <Field name='status' as='select' className='bg-transparent border border-solid border-[#7FAA84] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'>\n          <option value=''>--Choose a status--</option>\n          <option value='В наявності'>В наявності</option>\n          <option value='Закінчується'>Закінчується</option>\n          <option value='Немає в наявності'>Немає в наявності</option>\n         </Field>\n      </div>\n      </div>\n \n      <div>\n       <h3 className=\"text-[24px] font-medium\">Choose options</h3>\n       <ul className=\"flex flex-col gap-[15px]\">\n       {allOptions?.map(({optionValues, name, _id: id}, idx) => {\n          return <li key={id}>\n             <label className=\"flex items-center gap-[10px]\">\n                <Field name={`${allOptions}[${idx}].${name}`} opt_val={id} checked={selectedOptions?.find(item => item.name === name)} type='checkbox' value={name} onChange={handleChangeOption} />\n                <h3 className=\"text-[18px] font-semibold\">{name}</h3>\n             </label>\n             {selectedOptions.find(item => item.name === name) && optionValues?.map(({name, price}, idx) => {\n                return <><label className=\"flex items-center gap-[10px]\" key={idx}>\n                <Field name={`${allOptions}[${idx}].${name}`} opt_val={id} value={name} checked={selectedOptionValues.find(item => item.name === name)} onChange={handleChangeOptionValues} type='checkbox'/>\n                <h3 className=\"text-[16px] font-medium\">{name}</h3>\n             </label>\n               {selectedOptionValues?.find(item => item.name === name) && (\n                  <input\n                    type=\"text\"\n                    value={selectedOptions.map(item => item.options.find(item => item.name === name)).flatMap(item => item?.price)[0] || ''}\n                    placeholder=\"Type price for option\"\n                    onChange={e => {\n                      const nameOption =\n                        selectedOptionValues?.find(\n                          item => item.name === name\n                        );\n                      onChangeOptionPrice(e, nameOption);\n                    }}\n                  />\n                )}</>\n             })}\n          </li>\n       })}\n       </ul>\n      </div>\n \n      <div>\n      <h3 className=\"text-[24px] font-medium\">Choose filters</h3>\n      <ul>\n      {allFilters?.map(({name, filterValue, _id: id}, idx) => {\n       return <li key={id}>\n          <label className=\"flex items-center gap-[10px]\">\n             <Field name={`${allFilters}[${idx}].${name}`} filter_val={id} value={name} type='checkbox' checked={chooseFilters.find(item => item.name === name)} onChange={handleChangeFilter}/>\n             <h3 className=\"text-[18px] font-semibold\">{name}</h3>\n          </label>\n          {chooseFilters.find(item => item.name === name) && filterValue?.map(({name}, idx) => {\n             return <label className=\"flex items-center gap-[10px]\">\n                <Field name={`${allFilters}[${idx}].${name}`} filter_val={id} checked={chooseFilterOptions.find(item => item.name === name)} value={name} type='checkbox'  onChange={handleChangeFilterOptions}/>\n             <h3 className=\"text-[16px] font-medium\">{name}</h3>\n             </label>\n          })}\n       </li>\n      })}\n      </ul>\n      </div>\n\n      <div>\n                <FieldArray\n                  name=\"characteristics\"\n                  render={arrayHelpers => (\n                    <div className=\"flex flex-col gap-[15px]\">\n                      <div className=\"flex items-center gap-[15px]\">\n                        <h2 className=\"text-[24px] font-bold\">\n                          Add characteristics\n                        </h2>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            arrayHelpers.push({ name: '', option: '' })\n                          }\n                          className=\"p-[15px] bg-[#343a40] rounded-[5px] w-[34px] h-[34px] relative\"\n                        >\n                          <BsPlusLg className=\"text-[#fff] text-[24px] absolute top-[5px] left-[5px]\" />\n                        </button>\n                      </div>\n                      <div className=\"flex flex-col gap-[15px]\">\n                        {values.characteristics &&\n                          values.characteristics.length > 0 &&\n                          values.characteristics?.map((item, index) => {\n                            return (\n                              <>\n                                <div className=\"flex items-center gap-[10px]\">\n                                  <label className=\"flex flex-col gap-[10px]\">\n                                    Name\n                                    <Field\n                                      name={`characteristics[${index}].name`}\n                                    />\n                                  </label>\n\n                                  <label className=\"flex flex-col gap-[10px]\">\n                                    Option\n                                    <Field\n                                      name={`characteristics[${index}].option`}\n                                    />\n                                  </label>\n\n                                  <button\n                                    type=\"button\"\n                                    onClick={() => arrayHelpers.remove(index)}\n                                  >\n                                    <RiDeleteBinLine className=\"w-[24px] h-[24px] text-red-500\" />\n                                  </button>\n                                </div>\n                              </>\n                            );\n                          })}\n                      </div>\n                    </div>\n                  )}\n                />\n              </div>\n\n              <div>\n                <h3 className=\"text-[18px] font-medium\">Care for item</h3>\n                <Field\n                  name=\"care\"\n                  as=\"textarea\"\n                  placeholder=\"Care for item\"\n                  className=\"bg-transparent resize-none border border-solid border-[#7FAA84] w-full h-[350px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none\"\n                />\n              </div>\n \n      <div className=\"flex flex-col gap-[15px] items-start\">\n      <h3 className=\"text-[24px] font-medium\">Hot sales</h3>\n      <Field name='hitSales' type='checkbox' />\n      </div>\n \n      <div className=\"flex flex-col gap-[15px]\">\n         <h3 className=\"text-[18px] font-medium\">Description item</h3>\n         <Field name='desc' as=\"textarea\" placeholder='Description item' className='bg-transparent resize-none border border-solid border-[#7FAA84] w-full h-[350px] rounded-[5px] px-[15px] py-[15px] text-[16px] text-[#484848]/[.50] tracking-[0.32px] leading-[24px] outline-none'/>\n      </div>\n \n      <button type=\"submit\" className=\"py-[15px] px-[25px] bg-[#7FAA84] rounded-[5px] text-[#fff] text-[16px] font-medium w-[220px]\">Update item</button>\n      </Form>\n      )\n       }}\n     </Formik>\n     </div>\n <div className=\"flex flex-col gap-[15px]\">\n     <div>\n       <input type=\"file\" className=\"hidden\" multiple ref={fileRef} onChange={handleSelectFile} />\n       <button type=\"button\" onClick={() => fileRef.current.click()} className=\"text-gray-300 bg-gray-600 text-sm flex justify-center items-center border-2 border-dotted cursor-pointer py-4 w-[350px]\">\n          Add file\n       </button>\n     </div>\n \n {selectFile ?  <ul className=\"flex flex-col gap-[10px]\">\n            {selectFile.map((image, index) => (\n              <li key={index}>\n              <img\n                src={URL.createObjectURL(image)}\n                alt={image.name}\n                className=\"w-[350px] h-[150px]\"\n              />\n            </li>\n            ))}\n          </ul> : <>{currentImg?.map(item => <div key={item} className=\"w-[350px]\">\n    <img src={item} alt=\"Item img\" />\n </div>)}</>}\n     </div>\n \n     </div>\n   )\n}\n\nexport default AdminItemUpdate\n","import AdminItemUpdate from \"components/AdminItemUpdate\";\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { getItemDetails } from \"redux/items/operetions\"\nimport { selectItemDetails } from \"redux/items/selectors\";\n\nconst AdminItemUpdatePage = () => {\nconst dispatch = useDispatch();\nconst item = useSelector(selectItemDetails);\nconst {itemId} = useParams();\nconsole.log(item);\n\nuseEffect(() => {\n    dispatch(getItemDetails(itemId))\n}, [dispatch, itemId])\n\n  return <>{item && <AdminItemUpdate item={item}/>}</>\n}\n\nexport default AdminItemUpdatePage\n","export const selectFilters = state => state.filterAdmin.filters;\n\nexport const selectFilter = state => state.filterAdmin.filter;","export const selectOptions = state => state.option.options;\n\nexport const selectOption = state => state.option.option;\n"],"names":["item","title","desc","images","price","oldPrice","care","characteristics","status","categoryName","article","options","filters","hitSales","itemId","_id","console","log","dispatch","useDispatch","categories","useSelector","selectCategiries","allOptions","selectOptions","allFilters","selectFilters","useState","JSON","parse","selectedOptions","setSelectedOptions","flatMap","selectedOptionValues","setSelectedOptionValues","chooseFilters","setChooseFilters","chooseFilterOptions","setChooseFilterOptions","map","currentImg","selectFile","setSelectFile","fileRef","useRef","navigate","useNavigate","handleChangeOption","e","target","value","checked","optionId","attributes","opt_val","prev","name","filter","handleChangeOptionValues","prevOptions","option","handleChangeFilter","filterId","filter_val","handleChangeFilterOptions","prevFilters","useEffect","getCategories","getFilters","getOptions","initialValues","length","className","onSubmit","values","resetForm","data","FormData","append","stringify","i","updateItem","type","placeholder","as","id","idx","optionValues","find","onChange","nameOption","findOption","Number","onChangeOptionPrice","filterValue","render","arrayHelpers","onClick","push","index","remove","multiple","ref","files","selectedImagesArray","Array","from","current","click","image","src","URL","createObjectURL","alt","selectItemDetails","useParams","getItemDetails","state","filterAdmin","selectFilter","selectOption"],"sourceRoot":""}